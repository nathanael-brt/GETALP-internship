#convert a .srt file genertated by whisper into a .TextGrid file readable by Praat or ELAN
#---
#takes 2 files as an input (read on keyboard) :
#   The .srt file generated by Whisper
#   A .TextGrid file (Where the output will be written).
#----------------------------------------------------------------------------------------------------------------------

import os

#Open the files
Whis = open(input("Whisper file (.srt):\n"), "r")
Txtgrid = open(input("Textgrid file:\n"), "r+")

#prologue of the file
Txtgrid.write("File type = \"ooTextFile\"\nObject class = \"TextGrid\"\n")

#xmin - xmax
Txtgrid.write("\nxmin = 0\n")
Txtgrid.write("                                            \n")    #on reviendra ici plus tard

#tiers
Txtgrid.write("tiers? <exists>\n")
Txtgrid.write("size = 1\n")

#items
Txtgrid.write("item []:\n")
Txtgrid.write("    item [1]:\n")
Txtgrid.write("        class = \"IntervalTier\"\n")
Txtgrid.write("        name = \"all\"\n")
Txtgrid.write("        xmin = 0\n")
Txtgrid.write("                                                      \n")    #on reviendra ici plus tard
Txtgrid.write("                                                      \n")    #on reviendra ici plus tard

#we explore the file generated by whisper (the .srt format)
local_it = 0   #iterator to find your way through each paragraph (values between 0 and 3), one value correspond to one line in the 4 by 4 pattern of the file
for line in Whis:
    match local_it:
        case 0: 
            #first line
            line = line.rstrip(line[-1])
            interval = int(line)  #number of the interval
            Txtgrid.write("        intervals [" + str(interval) + "]:\n")
            local_it+= 1 
        case 1:
            #second line
            Numbers = line.split(" --> ")  #we divide min and max
            
            T_min_list = Numbers[0].split(":")  #we split the numbers of min
            Unit_list = T_min_list[2].split(",")   #transformation into a float for the comma
            Unit = float(Unit_list[0]) + float(Unit_list[1])*0.001
            T_min = float(T_min_list[0])*3600 + float(T_min_list[1])*60 + Unit   #we compute the min time
            
            T_max_list = Numbers[1].split(":")  #we divide the numbers of max
            Unit_list = T_max_list[2].split(",")   #transformation into a float for the comma
            Unit = float(Unit_list[0]) + float(Unit_list[1])*0.001
            T_max = float(T_max_list[0])*3600 + float(T_max_list[1])*60 + Unit  #we compute the max time

            Txtgrid.write("            xmin = " + str(T_min) + "\n")
            Txtgrid.write("            xmax = " + str(T_max) + "\n")
            local_it+= 1 
        case 2:
            #third line 
            line = line.rstrip(line[-1])
            Txtgrid.write("            text = \"" + line + "\"\n")
            local_it+= 1 
        case 3:
            #empty line 
            local_it = 0 

#write the max time to the 5th line of the fileTxtgrid.seek(61,0)
Txtgrid.write("xmax = " + str(T_max))

#write the max time to the 13th line of the file
Txtgrid.seek(227,0)
Txtgrid.write("    xmax = " + str(T_max))

#we write the number of intervals on the 14th line of the file
Txtgrid.seek(282,0)
Txtgrid.write("    intervals: size = " + str(interval))

#close the files
Whis.close()
Txtgrid.close()
